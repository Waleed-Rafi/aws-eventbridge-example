AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  CommonDependencies:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: dependencies/common.zip

  EventProducerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: event-producer/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Layers:
        - !Ref CommonDependencies
      Policies:
        - VPCAccessPolicy: {}
        - EventBridgePutEventsPolicy:
            EventBusName: "default"

  EventConsumerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: event-consumer/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Layers:
        - !Ref CommonDependencies
      Policies:
        - VPCAccessPolicy: {}
        - EventBridgePutEventsPolicy: # You don't need to give  eventBridgePutEventPolicy, I am just geving it so I can get cloudwatch logs access (default behavior)
            EventBusName: "default"

  TriggerConsumerFunctionRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "For Events generated by producer function"
      EventPattern:
        source:
          - "waleed.consumer"
        detail:
          state:
            - "update"
      State: "ENABLED"
      Targets:
        - Arn:
            Fn::GetAtt:
              - "EventConsumerFunction"
              - "Arn"
          Id: "eventConsumerFunctionTarget"

  PermissionForInvokingConsumerLambdaFunctionByEventBridge:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: "EventConsumerFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "TriggerConsumerFunctionRule"
          - "Arn"
